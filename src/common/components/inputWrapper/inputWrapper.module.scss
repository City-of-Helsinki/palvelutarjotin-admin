.root {
  composes: hds-text-input from '~hds-core/lib/components/text-input/text-input.css';
  position: relative;
}

.inputWrapper {
  composes: hds-text-input__input-wrapper from '~hds-core/lib/components/text-input/text-input.css';
}

.input {
  composes: hds-text-input__input from '~hds-core/lib/components/text-input/text-input.css';
}

.errorText {
  composes: hds-text-input__error-text from '~hds-core/lib/components/text-input/text-input.css';
}

.helperText {
  composes: hds-text-input__helper-text from '~hds-core/lib/components/text-input/text-input.css';
}

.invalidText {
  composes: hds-text-input__helper-text from '~hds-core/lib/components/text-input/text-input.css';
}

.successText {
  composes: hds-text-input__success-text from '~hds-core/lib/components/text-input/text-input.css';
}

.invalid {
  composes: hds-text-input--invalid from '~hds-core/lib/components/text-input/text-input.css';
}

.success {
  composes: hds-text-input--success from '~hds-core/lib/components/text-input/text-input.css';
}

.readOnly {
  composes: hds-text-input--read-only from '~hds-core/lib/components/text-input/text-input.css';
}

.hasIcon {
  .inputWrapper {
    &::after {
      right: calc(var(--border-width) + var(--icon-width)) !important;
    }
  }
}
